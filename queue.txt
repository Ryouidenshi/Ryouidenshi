

#include<iostream>

using namespace std;

class queue 
{
private:
	struct queueStruct
	{
		int value;
		queueStruct* Next;
	};

	queueStruct* head; 
	queueStruct* tail; 
	int count; 

public:
	queue()
	{
		head = new(queueStruct);
		tail = head;
		head->Next = 0;
		count = 0;
	}

	void push(int value)
	{
		count++;
		queueStruct *temp = new(queueStruct);
		temp->value = value;
		temp->Next = 0;
		tail->Next = temp;
		tail = temp;			
	}

	int pop()
	{
		queueStruct* temp = head;
		if (count == 0)
		{
			cout << "Очередь пуста!" << endl;
			return NAN;
		}
		head = head->Next;
		delete temp;
		count--;
		return head->value;
	}

	int size()
	{
		return count;
	}

	int peek()
	{
		return tail->value;
	}
};

int main()
{
	queue *newQueue = new(queue);
	newQueue->push(6);
	newQueue->push(55);
	newQueue->push(75);
	newQueue->push(25);
	newQueue->push(15);
	newQueue->push(95);
	int countElement = newQueue->size();
	cout << "Last element in queue - " << newQueue->peek() << endl;
	cout << "Count elements in queue: "<<countElement << endl;
	for (int i=0; i<countElement;i++)
		cout << "Element queue - "<< newQueue->pop() << endl;
}

